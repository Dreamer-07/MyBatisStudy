<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.dreamer07.dao.EmployeeDao">

    <!-- public Employee getEmpById(Integer id); -->
    <select id="getEmpById" resultType="pers.dreamer07.bean.Employee">
        SELECT * FROM employee WHERE id = #{id}
    </select>

    <!-- public Employee getEmpByIdAndEmpName(@Param("id") Integer id,@Param("empName") String empName); -->
    <select id="getEmpByIdAndEmpName" resultType="pers.dreamer07.bean.Employee">
        SELECT* FROM employee WHERE id = #{id} AND emp_name = #{empName}
    </select>

    <!--
    获取自增id的值 - 使用 insert / update 标签中的 useGeneratedKeys 和  keyProperty 属性
        - useGeneratedKeys：底层调用原生 JDBC 中的方法获取添加数据后自增id的值
        - keyProperty：将获取的自增id的值，赋给 employee 对象中的对应的 属性
     -->
    <insert id="addEmp" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO employee(emp_name,email,gender) VALUES(#{empName},#{email},#{gender})
    </insert>

    <!--
    获取非自增主键 id 的值
        - 在内部使用 selectKey 标签
    -->
    <insert id="addEmp2" >
        <!--
        selectKey 标签
            - 作用：可以通过指定 order 属性，设置 BEFPRE / AFTER 可以使其在核心 sql 语句 之前/之后 执行
            - 使用：
                1. 设置 order 属性
                2. 设置 resultType 属性，指定返回值类型
                3. 设置 keyProperty 属性，将查询的返回值赋值给对应的属性
         -->
        <selectKey order="BEFORE" resultType="integer" keyProperty="id">
            SELECT MAX(id) + 1 FROM employee <!-- 对于没有自增id的主键，先查询出最大的主键id值，并将值+1后赋值给对于的属性，后再存入数据 -->
        </selectKey>
        INSERT INTO employee(id,emp_name,email,gender) VALUES(#{id},#{empName},#{email},#{gender})
    </insert>

    <!-- public List<Employee> getEmps();
            - 对于返回值是 List 类型的方法，在实现方法时的 resultType 属性指定为集合元素类型即可
    -->
    <select id="getEmps" resultType="pers.dreamer07.bean.Employee">
        SELECT * FROM employee
    </select>

    <!--
    查询一条记录封装的 Map
    public Map<String,Object> getEmpByIdReturnMap(Integer id);
        - key值为查询结果的字段名
        - value值为对应的字段值
    -->
    <select id="getEmpByIdReturnMap" resultType="map"> <!-- MyBatis 为 Map 类型已经定义了别名 map -->
        SELECT * FROM employee WHERE id = #{id}
    </select>

    <!--
    查询多条记录封装的 Map
    @MapKey("id") //需要通过 @MapKey 注解指定查询结果的字段名作为 返回结果集Map的key值
    public Map<Integer,Employee> getAllEmpReturnMap();
        - key为指定的字段值
        - value 为指定封装的数据类型对象
    -->
    <select id="getAllEmpReturnMap" resultType="pers.dreamer07.bean.Employee"> <!-- 这里和 List 一样，指定为 value 值的数据类型 -->
        SELECT * FROM employee
    </select>
</mapper>